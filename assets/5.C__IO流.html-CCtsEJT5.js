import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-Dezzdk4T.js";const p="/assets/5.C__IO%E6%B5%81-BsRE_wzn.png",e={},o=t('<h1 id="第五章-c-io流" tabindex="-1"><a class="header-anchor" href="#第五章-c-io流"><span>第五章：C++IO流</span></a></h1><h2 id="知识点思维导图" tabindex="-1"><a class="header-anchor" href="#知识点思维导图"><span>知识点思维导图</span></a></h2><figure><img src="'+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><hr><h2 id="复习代码" tabindex="-1"><a class="header-anchor" href="#复习代码"><span>复习代码</span></a></h2><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">//  Author：JimBo (1353429820@qq.com)</span>
<span class="token comment">//  Filename：main</span>
<span class="token comment">//  Date：2024/1/18</span>
<span class="token comment">//  Description：review knowledge points</span>
<span class="token comment">//  Copyrights（c）JimBo. All rights reserved</span>

<span class="token comment">//1.C++标准IO流</span>
<span class="token comment">//std::cout：标准输出流，用于将数据输出到屏幕</span>
<span class="token comment">//std::cin：标准输入流，用户从键盘读取输入</span>
<span class="token comment">//std::cerr：标准错误输出流，用于将错误信息输出到屏幕</span>
<span class="token comment">//std::clog：标准日志输出流，用于输出错误信息</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> num1<span class="token punctuation">,</span> num2<span class="token punctuation">;</span>
    <span class="token comment">//使用cout、cin进行输入输出</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Enter two numbers：&quot;</span><span class="token punctuation">;</span>
    std<span class="token operator">::</span>cin <span class="token operator">&gt;&gt;</span> num1 <span class="token operator">&gt;&gt;</span> num2<span class="token punctuation">;</span>
    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Sum：&quot;</span> <span class="token operator">&lt;&lt;</span> num1<span class="token operator">+</span>num2 <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>

    <span class="token comment">//使用cerr输出错误信息</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>num2 <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       std<span class="token operator">::</span>cerr <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Error：num2 is zero!&quot;</span> <span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//使用clog输出日志信息</span>
    std<span class="token operator">::</span>clog <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Operation completed successfully.&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 运行结果：
    Enter two numbers：1 0
    Sum：1
    Error：num2 is zero!
    Operation completed successfully. 
*/</span>


<span class="token comment">//2.文件流对象：ifstream(只读)、ofstream(只写)、fstream(读写)，头文件为#include&lt;fstream&gt;</span>
<span class="token comment">//读文件</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;fstream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>ifstream <span class="token function">inFile</span><span class="token punctuation">(</span><span class="token string">&quot;../example.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>inFile<span class="token punctuation">.</span><span class="token function">is_open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       <span class="token comment">//读文件中数据</span>
       std<span class="token operator">::</span>string line<span class="token punctuation">;</span>
       <span class="token keyword">while</span><span class="token punctuation">(</span>std<span class="token operator">::</span><span class="token function">getline</span><span class="token punctuation">(</span>inFile<span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">)</span>
       <span class="token punctuation">{</span>
          std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Read from file：&quot;</span> <span class="token operator">&lt;&lt;</span> line <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       <span class="token comment">//关闭文件</span>
       inFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
       std<span class="token operator">::</span>cerr <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Unable to open file for reading.&quot;</span> <span class="token operator">&lt;&lt;</span>std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//运行结果：Read from file：1234</span>

<span class="token comment">//写文件</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;fstream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    std<span class="token operator">::</span>ofstream <span class="token function">outFile</span><span class="token punctuation">(</span><span class="token string">&quot;../example.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//打开一个文件以写入</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>outFile<span class="token punctuation">.</span><span class="token function">is_open</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       <span class="token comment">//覆盖写入数据到文件</span>
       outFile <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello I/O!&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
       outFile <span class="token operator">&lt;&lt;</span> <span class="token number">42</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
       outFile <span class="token operator">&lt;&lt;</span> <span class="token number">3.14</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>

       <span class="token comment">//关闭文件</span>
       outFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
       std<span class="token operator">::</span>cerr <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Unable to open file for writing&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">//fstream常用读写文件</span>
<span class="token comment">//std::ios::in：以读方式打开</span>
<span class="token comment">//std::ios::out：以写方式打开</span>
<span class="token comment">//std::ios::app：以追加方式写入文件</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;fstream&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//文件读、写、读写、追加</span>
    std<span class="token operator">::</span>fstream <span class="token function">inFile</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//读</span>
    std<span class="token operator">::</span>fstream <span class="token function">outFile</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//写</span>
    std<span class="token operator">::</span>fstream <span class="token function">file</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>in <span class="token operator">|</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//读写</span>
    std<span class="token operator">::</span>fstream <span class="token function">outFile2</span><span class="token punctuation">(</span><span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>out <span class="token operator">|</span> std<span class="token operator">::</span>ios<span class="token operator">::</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//追加</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//文件读写操作成员函数使用的时候查文档来用，没必要记住</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),c=[o];function l(i,r){return s(),a("div",null,c)}const d=n(e,[["render",l],["__file","5.C__IO流.html.vue"]]),m=JSON.parse('{"path":"/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/2.CPP/5.C__IO%E6%B5%81.html","title":"第五章：C++IO流","lang":"zh-CN","frontmatter":{"date":"2024-02-05T00:00:00.000Z","order":6,"description":"第五章：C++IO流 知识点思维导图 复习代码","head":[["meta",{"property":"og:url","content":"https://github.com/jimbo-master/%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/2.CPP/5.C__IO%E6%B5%81.html"}],["meta",{"property":"og:site_name","content":"JimBoの学习妙妙屋"}],["meta",{"property":"og:title","content":"第五章：C++IO流"}],["meta",{"property":"og:description","content":"第五章：C++IO流 知识点思维导图 复习代码"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"JimBo"}],["meta",{"property":"article:published_time","content":"2024-02-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第五章：C++IO流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"JimBo\\",\\"url\\":\\"https://github.com/jimbo-master\\"}]}"]]},"headers":[{"level":2,"title":"知识点思维导图","slug":"知识点思维导图","link":"#知识点思维导图","children":[]},{"level":2,"title":"复习代码","slug":"复习代码","link":"#复习代码","children":[]}],"git":{},"readingTime":{"minutes":1.66,"words":498},"filePathRelative":"编程学习/2.CPP/5.C++IO流.md","localizedDate":"2024年2月5日","autoDesc":true,"excerpt":"\\n<h2>知识点思维导图</h2>\\n<figure><figcaption></figcaption></figure>\\n<hr>\\n<h2>复习代码</h2>\\n<div class=\\"language-c\\" data-ext=\\"c\\" data-title=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">//  Author：JimBo (1353429820@qq.com)</span>\\n<span class=\\"token comment\\">//  Filename：main</span>\\n<span class=\\"token comment\\">//  Date：2024/1/18</span>\\n<span class=\\"token comment\\">//  Description：review knowledge points</span>\\n<span class=\\"token comment\\">//  Copyrights（c）JimBo. All rights reserved</span>\\n\\n<span class=\\"token comment\\">//1.C++标准IO流</span>\\n<span class=\\"token comment\\">//std::cout：标准输出流，用于将数据输出到屏幕</span>\\n<span class=\\"token comment\\">//std::cin：标准输入流，用户从键盘读取输入</span>\\n<span class=\\"token comment\\">//std::cerr：标准错误输出流，用于将错误信息输出到屏幕</span>\\n<span class=\\"token comment\\">//std::clog：标准日志输出流，用于输出错误信息</span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">int</span> num1<span class=\\"token punctuation\\">,</span> num2<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//使用cout、cin进行输入输出</span>\\n    std<span class=\\"token operator\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Enter two numbers：\\"</span><span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token operator\\">::</span>cin <span class=\\"token operator\\">&gt;&gt;</span> num1 <span class=\\"token operator\\">&gt;&gt;</span> num2<span class=\\"token punctuation\\">;</span>\\n    std<span class=\\"token operator\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Sum：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> num1<span class=\\"token operator\\">+</span>num2 <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">//使用cerr输出错误信息</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>num2 <span class=\\"token operator\\">==</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n       std<span class=\\"token operator\\">::</span>cerr <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Error：num2 is zero!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span>std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">//使用clog输出日志信息</span>\\n    std<span class=\\"token operator\\">::</span>clog <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Operation completed successfully.\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">/*\\n 运行结果：\\n    Enter two numbers：1 0\\n    Sum：1\\n    Error：num2 is zero!\\n    Operation completed successfully. \\n*/</span>\\n\\n\\n<span class=\\"token comment\\">//2.文件流对象：ifstream(只读)、ofstream(只写)、fstream(读写)，头文件为#include&lt;fstream&gt;</span>\\n<span class=\\"token comment\\">//读文件</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;fstream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    std<span class=\\"token operator\\">::</span>ifstream <span class=\\"token function\\">inFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"../example.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>inFile<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is_open</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token comment\\">//读文件中数据</span>\\n       std<span class=\\"token operator\\">::</span>string line<span class=\\"token punctuation\\">;</span>\\n       <span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span>std<span class=\\"token operator\\">::</span><span class=\\"token function\\">getline</span><span class=\\"token punctuation\\">(</span>inFile<span class=\\"token punctuation\\">,</span> line<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n       <span class=\\"token punctuation\\">{</span>\\n          std<span class=\\"token operator\\">::</span>cout <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Read from file：\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> line <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n       <span class=\\"token punctuation\\">}</span>\\n       <span class=\\"token comment\\">//关闭文件</span>\\n       inFile<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span>\\n    <span class=\\"token punctuation\\">{</span>\\n       std<span class=\\"token operator\\">::</span>cerr <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Unable to open file for reading.\\"</span> <span class=\\"token operator\\">&lt;&lt;</span>std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token comment\\">//运行结果：Read from file：1234</span>\\n\\n<span class=\\"token comment\\">//写文件</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;fstream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    std<span class=\\"token operator\\">::</span>ofstream <span class=\\"token function\\">outFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"../example.txt\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//打开一个文件以写入</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>outFile<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">is_open</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">{</span>\\n       <span class=\\"token comment\\">//覆盖写入数据到文件</span>\\n       outFile <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Hello I/O!\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n       outFile <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">42</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n       outFile <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token number\\">3.14</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n\\n       <span class=\\"token comment\\">//关闭文件</span>\\n       outFile<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">close</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span>\\n    <span class=\\"token punctuation\\">{</span>\\n       std<span class=\\"token operator\\">::</span>cerr <span class=\\"token operator\\">&lt;&lt;</span> <span class=\\"token string\\">\\"Unable to open file for writing\\"</span> <span class=\\"token operator\\">&lt;&lt;</span> std<span class=\\"token operator\\">::</span>endl<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n\\n<span class=\\"token comment\\">//fstream常用读写文件</span>\\n<span class=\\"token comment\\">//std::ios::in：以读方式打开</span>\\n<span class=\\"token comment\\">//std::ios::out：以写方式打开</span>\\n<span class=\\"token comment\\">//std::ios::app：以追加方式写入文件</span>\\n\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;iostream&gt;</span></span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span><span class=\\"token string\\">&lt;fstream&gt;</span></span>\\n\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//文件读、写、读写、追加</span>\\n    std<span class=\\"token operator\\">::</span>fstream <span class=\\"token function\\">inFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"example.txt\\"</span><span class=\\"token punctuation\\">,</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>in<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//读</span>\\n    std<span class=\\"token operator\\">::</span>fstream <span class=\\"token function\\">outFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"example.txt\\"</span><span class=\\"token punctuation\\">,</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>out<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//写</span>\\n    std<span class=\\"token operator\\">::</span>fstream <span class=\\"token function\\">file</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"example.txt\\"</span><span class=\\"token punctuation\\">,</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>in <span class=\\"token operator\\">|</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>out<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//读写</span>\\n    std<span class=\\"token operator\\">::</span>fstream <span class=\\"token function\\">outFile2</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"example.txt\\"</span><span class=\\"token punctuation\\">,</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>out <span class=\\"token operator\\">|</span> std<span class=\\"token operator\\">::</span>ios<span class=\\"token operator\\">::</span>app<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//追加</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">//文件读写操作成员函数使用的时候查文档来用，没必要记住</span>\\n</code></pre></div>"}');export{d as comp,m as data};
